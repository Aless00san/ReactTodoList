{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alessandro\\\\Desktop\\\\code\\\\ReactTodoList\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, Fragment, useRef, useEffect } from \"react\";\nimport { TodoList } from \"./components/ToDoList\";\nimport { v4 as uuidv4 } from 'uuid';\n\n//Esta app permite una gestion de tareas, pudiendo crearlas, establecerlas como completadas\n//o eliminarlas en caso de ser necesario\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const [todos, setTodos] = useState([{\n    id: 1,\n    task: \"Tarea 1\",\n    completed: false\n  }]);\n  const todoTaskRef = useRef();\n\n  //Este metodo es llamado al iniciar la app para cargar las tareas del localStorage\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem('todoApp.todos'));\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, []);\n\n  //Este metodo es llamado al agregar una nueva tarea al array todos para guardar el estado en localStorage\n  useEffect(() => {\n    localStorage.setItem('todoApp.todos', JSON.stringify(todos));\n  }, [todos]);\n\n  //funcion para actualizar los todos completados\n  const toggleTodo = id => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n  };\n\n  //Metodo para gestionar el agregar nuevas tareas\n  const handleTodoAdd = () => {\n    const task = todoTaskRef.current.value;\n    if (task === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        task,\n        completed: false\n      }];\n    });\n    todoTaskRef.current.value = null;\n  };\n\n  //Metodo para borrar todas las tareas completadas\n  const handleClearAll = () => {\n    const newTodos = todos.filter(todo => !todo.completed);\n    setTodos(newTodos);\n  };\n\n  //El contenido que mostrara nuestra app\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleTodo: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoTaskRef,\n      type: \"text\",\n      placeholder: \"Nueva Tarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTodoAdd,\n      children: \"\\u2795 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearAll,\n      children: \"\\uD83D\\uDCA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Te quedan \", todos.filter(todo => !todo.completed).length, \" tareas por terminar\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UIqP4bBNdLg4ifg4ycEx5Y67KG8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Fragment","useRef","useEffect","TodoList","v4","uuidv4","jsxDEV","_jsxDEV","App","_s","todos","setTodos","id","task","completed","todoTaskRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","toggleTodo","newTodos","todo","find","handleTodoAdd","current","value","prevTodos","handleClearAll","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","placeholder","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/Alessandro/Desktop/code/ReactTodoList/src/App.jsx"],"sourcesContent":["import React, {useState, Fragment, useRef, useEffect} from \"react\";\r\nimport { TodoList } from \"./components/ToDoList\";\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\n//Esta app permite una gestion de tareas, pudiendo crearlas, establecerlas como completadas\r\n//o eliminarlas en caso de ser necesario\r\nexport function App() {\r\n    const [todos, setTodos] = useState([\r\n        { id: 1, task: \"Tarea 1\", completed: false},\r\n    ]);\r\n\r\n    const todoTaskRef = useRef();\r\n\r\n    //Este metodo es llamado al iniciar la app para cargar las tareas del localStorage\r\n    useEffect(() => {\r\n       const storedTodos = JSON.parse(localStorage.getItem('todoApp.todos'));\r\n       if(storedTodos) {\r\n        setTodos(storedTodos);\r\n       }\r\n    }, []);\r\n\r\n    //Este metodo es llamado al agregar una nueva tarea al array todos para guardar el estado en localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem('todoApp.todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    //funcion para actualizar los todos completados\r\n    const toggleTodo = (id) => {\r\n        const newTodos = [...todos];\r\n        const todo = newTodos.find((todo) => todo.id === id);\r\n        todo.completed = !todo.completed;\r\n        setTodos(newTodos)\r\n    };\r\n\r\n    //Metodo para gestionar el agregar nuevas tareas\r\n    const handleTodoAdd = () => {\r\n        const task = todoTaskRef.current.value;\r\n        if (task === '') return;\r\n\r\n        setTodos((prevTodos) => {\r\n            return [...prevTodos, { id: uuidv4(), task, completed: false}];\r\n        });\r\n\r\n        todoTaskRef.current.value = null;\r\n    };\r\n\r\n    //Metodo para borrar todas las tareas completadas\r\n    const handleClearAll = () => {\r\n        const newTodos = todos.filter((todo) => !todo.completed);\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    //El contenido que mostrara nuestra app\r\n    return (\r\n    <Fragment>\r\n        <TodoList todos ={todos} toggleTodo={toggleTodo}/>\r\n        <input ref={todoTaskRef} type=\"text\" placeholder=\"Nueva Tarea\" />\r\n        <button onClick={handleTodoAdd}>âž• </button>\r\n        <button onClick={handleClearAll}>ðŸ’©</button>\r\n        <div>Te quedan {todos.filter((todo) => !todo.completed).length} tareas por terminar</div>\r\n    </Fragment>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}